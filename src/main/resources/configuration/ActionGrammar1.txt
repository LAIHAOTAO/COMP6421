prog -> classDecl prog | progBody
classDecl -> CLASS ID sym_CreateClassScope LBP classBody
classBody -> type sym_StoreType ID sym_StoreId classBodyPrime | RBP SEMICOLON sym_EndScope
classBodyPrime -> classBodyVar | classBodyFunc
classBodyVar -> varDeclArray sym_CreateVariable classBody
classBodyFunc -> LCP sym_StartMemberFunction fParams RCP sym_CreateFunction funcBody SEMICOLON classBodyFuncPrime
classBodyFuncPrime -> type sym_StoreType ID sym_StoreId classBodyFunc | RBP SEMICOLON sym_EndScope
progBody -> PROGRAM sym_CreateProgram funcBody SEMICOLON funcDefs
funcDefs -> type sym_StoreType ID sym_StoreId LCP sym_StartFunction fParams RCP sym_CreateFunction funcBody SEMICOLON funcDefs | EPSILON
funcBody -> LBP funcBodyVar
funcBodyVar -> INT sym_StoreType ID sym_StoreId varDeclArray sym_CreateVariable funcBodyVar | FLOAT sym_StoreType ID sym_StoreId varDeclArray sym_CreateVariable funcBodyVar | ID funcBodyVarPrime | controlStat funcBodyStmt | RBP sym_EndScope
funcBodyVarPrime -> sym_StoreType ID sym_StoreId varDeclArray sym_CreateVariable funcBodyVar | sem_StartAssignmentStatment sem_PushVariableName indices variablePrime assignStat funcBodyStmt
funcBodyStmt -> sem_StartAssignmentStatment variable assignStat funcBodyStmt | controlStat funcBodyStmt | RBP sym_EndScope
varDeclArray -> arraySize varDeclArray | SEMICOLON
controlStat -> IF sem_StartIfStatement LCP expr RCP THEN statBlock ELSE statBlock SEMICOLON | FOR sem_StartForStatement LCP type sym_StoreType sem_StartAssignmentStatment ID sym_StoreId sym_CreateVariable sem_PushVariableName sem_FinishVariable assignOp expr SEMICOLON relExpr SEMICOLON sem_StartAssignmentStatment variable assignExpr RCP statBlock SEMICOLON | GET sem_StartGetStatement LCP variable RCP SEMICOLON | PUT sem_StartPutStatement LCP expr RCP SEMICOLON | RETURN sem_StartReturnStatement LCP expr RCP SEMICOLON
assignStat -> assignExpr SEMICOLON
assignExpr -> assignOp expr
statBlock -> LBP sem_StartBlock statBlockStmts | sem_StartBlock sem_StartAssignmentStatment variable assignStat sem_EndBlock | sem_StartBlock controlStat sem_EndBlock | EPSILON sem_StartBlock sem_EndBlock
statBlockStmts -> sem_StartAssignmentStatment variable assignStat statBlockStmts | controlStat statBlockStmts | RBP sem_EndBlock
expr -> sem_StartRelationExpression arithExpr exprPrime
exprPrime -> relOp sem_PushRelationOperation sem_StartRelationExpression arithExpr exprPrime | EPSILON sem_EndRelationExpression
relExpr -> sem_StartRelationExpression arithExpr relOp sem_PushRelationOperation arithExpr sem_EndRelationExpression
arithExpr -> sem_StartAdditionExpression term arithExprPrime
arithExprPrime -> addOp sem_PushAdditionOperation arithExpr | EPSILON sem_EndAdditionExpression
sign -> ADDITION | SUBTRACTION
term -> sem_StartMultiplicationExpression factor termPrime
termPrime -> multOp sem_PushMultiplicationOperation sem_StartMultiplicationExpression factor termPrime | EPSILON sem_EndMultiplicationExpression
factor -> factorIdNest | INT_NUM sem_PushIntLiteral | FLOAT_NUM sem_PushFloatLiteral | LCP arithExpr RCP | NOT factor | sign factor
factorIdNest -> ID factorIdNestPrime
factorIdNestPrime -> sem_PushVariableName indices secondFactorIdNest | sem_StartFunctionCall LCP aParams RCP sem_EndFunctionCall
secondFactorIdNest -> DOT factorIdNest | EPSILON sem_FinishVariable
variable -> ID sem_PushVariableName indices variablePrime
variablePrime -> DOT variable | EPSILON sem_FinishVariable
indices -> indice indices | EPSILON
indice -> LSP arithExpr RSP
arraySize -> LSP INT_NUM sym_StoreDimension RSP
type -> INT | FLOAT | ID
fParams -> type sym_StoreType ID sym_StoreId fParamsArraySz | EPSILON
fParamsArraySz -> arraySize fParamsArraySz | sym_AddFunctionParameter fParamsTailStar
fParamsTailStar -> fParamsTail fParamsTailStar | EPSILON
fParamsTail -> COMMA type sym_StoreType ID sym_StoreId arraySizeStar sym_AddFunctionParameter
arraySizeStar -> arraySize arraySizeStar | EPSILON
aParams -> expr aParamsTailStar | EPSILON
aParamsTailStar -> aParamsTail aParamsTailStar | EPSILON
aParamsTail -> COMMA expr
assignOp -> ASSIGNMENT
relOp -> LT | LEQ | NEQ | EQ | GT | GEQ
addOp -> ADDITION | SUBTRACTION | OR
multOp -> MULTIPLICATION | DIVISION | AND